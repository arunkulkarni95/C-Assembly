   1              		.file	"wclist.c"
   2              		.intel_syntax noprefix
   3              		.text
   4              	.Ltext0:
   5              		.section	.rodata
   6              	.LC0:
   7 0000 0A446F6E 		.string	"\nDone!"
   7      652100
   8              		.text
   9              		.globl	main
  11              	main:
  12              	.LFB6:
  13              		.file 1 "wclist.c"
   1:wclist.c      **** //lab9
   2:wclist.c      **** //Dr. Karne 
   3:wclist.c      **** //wclist.c
   4:wclist.c      **** #include <stdio.h>
   5:wclist.c      **** #include <stdlib.h>
   6:wclist.c      **** #include <stdint.h>
   7:wclist.c      **** #include <string.h>
   8:wclist.c      **** #include <math.h>
   9:wclist.c      **** #include "wclist.h" 
  10:wclist.c      **** 
  11:wclist.c      **** void initList(struct CListRecord *ptr, char *dp1); 
  12:wclist.c      **** void printList(struct CListRecord *ptr); 
  13:wclist.c      **** 
  14:wclist.c      **** int main (int argc, char **argv) 
  15:wclist.c      **** {
  14              		.loc 1 15 1
  15              		.cfi_startproc
  16 0000 F30F1EFA 		endbr64
  17 0004 55       		push	rbp
  18              		.cfi_def_cfa_offset 16
  19              		.cfi_offset 6, -16
  20 0005 4889E5   		mov	rbp, rsp
  21              		.cfi_def_cfa_register 6
  22 0008 4883EC40 		sub	rsp, 64
  23 000c 897DCC   		mov	DWORD PTR -52[rbp], edi
  24 000f 488975C0 		mov	QWORD PTR -64[rbp], rsi
  25              		.loc 1 15 1
  26 0013 64488B04 		mov	rax, QWORD PTR fs:40
  26      25280000 
  26      00
  27 001c 488945F8 		mov	QWORD PTR -8[rbp], rax
  28 0020 31C0     		xor	eax, eax
  16:wclist.c      ****     struct CListRecord *ptr;
  17:wclist.c      ****     ptr = (struct CListRecord*) malloc(MAX_RECORDS * sizeof(struct CListRecord));
  29              		.loc 1 17 33
  30 0022 BF400100 		mov	edi, 320
  30      00
  31 0027 E8000000 		call	malloc@PLT
  31      00
  32 002c 488945D8 		mov	QWORD PTR -40[rbp], rax
  18:wclist.c      ****     char *datap = (char*) malloc(MAX_DSIZE);
  33              		.loc 1 18 27
  34 0030 BF0A0000 		mov	edi, 10
  34      00
  35 0035 E8000000 		call	malloc@PLT
  35      00
  36 003a 488945E0 		mov	QWORD PTR -32[rbp], rax
  19:wclist.c      ****     char data[10] = "RANDOMCHAR";
  37              		.loc 1 19 10
  38 003e 48B85241 		movabs	rax, 5207090597014159698
  38      4E444F4D 
  38      4348
  39 0048 488945EE 		mov	QWORD PTR -18[rbp], rax
  40 004c 66C745F6 		mov	WORD PTR -10[rbp], 21057
  40      4152
  20:wclist.c      ****     datap = data;    
  41              		.loc 1 20 11
  42 0052 488D45EE 		lea	rax, -18[rbp]
  43 0056 488945E0 		mov	QWORD PTR -32[rbp], rax
  21:wclist.c      **** 
  22:wclist.c      ****     initList(ptr, datap);
  44              		.loc 1 22 5
  45 005a 488B55E0 		mov	rdx, QWORD PTR -32[rbp]
  46 005e 488B45D8 		mov	rax, QWORD PTR -40[rbp]
  47 0062 4889D6   		mov	rsi, rdx
  48 0065 4889C7   		mov	rdi, rax
  49 0068 E8000000 		call	initList
  49      00
  23:wclist.c      ****     printList(ptr);
  50              		.loc 1 23 5
  51 006d 488B45D8 		mov	rax, QWORD PTR -40[rbp]
  52 0071 4889C7   		mov	rdi, rax
  53 0074 E8000000 		call	printList
  53      00
  24:wclist.c      **** 
  25:wclist.c      ****     printf ("\nDone!\n"); 
  54              		.loc 1 25 5
  55 0079 488D3D00 		lea	rdi, .LC0[rip]
  55      000000
  56 0080 E8000000 		call	puts@PLT
  56      00
  26:wclist.c      ****     return 0; 
  57              		.loc 1 26 12
  58 0085 B8000000 		mov	eax, 0
  58      00
  27:wclist.c      **** }
  59              		.loc 1 27 1
  60 008a 488B4DF8 		mov	rcx, QWORD PTR -8[rbp]
  61 008e 6448330C 		xor	rcx, QWORD PTR fs:40
  61      25280000 
  61      00
  62 0097 7405     		je	.L3
  63 0099 E8000000 		call	__stack_chk_fail@PLT
  63      00
  64              	.L3:
  65 009e C9       		leave
  66              		.cfi_def_cfa 7, 8
  67 009f C3       		ret
  68              		.cfi_endproc
  69              	.LFE6:
  71              		.globl	initList
  73              	initList:
  74              	.LFB7:
  28:wclist.c      **** void initList(struct CListRecord *base, char *datap) 
  29:wclist.c      **** {
  75              		.loc 1 29 1
  76              		.cfi_startproc
  77 00a0 F30F1EFA 		endbr64
  78 00a4 55       		push	rbp
  79              		.cfi_def_cfa_offset 16
  80              		.cfi_offset 6, -16
  81 00a5 4889E5   		mov	rbp, rsp
  82              		.cfi_def_cfa_register 6
  83 00a8 48897DE8 		mov	QWORD PTR -24[rbp], rdi
  84 00ac 488975E0 		mov	QWORD PTR -32[rbp], rsi
  85              	.LBB2:
  30:wclist.c      ****     for (int i = 0; i < MAX_RECORDS; ++i){
  86              		.loc 1 30 14
  87 00b0 C745FC00 		mov	DWORD PTR -4[rbp], 0
  87      000000
  88              		.loc 1 30 5
  89 00b7 EB6D     		jmp	.L5
  90              	.L6:
  31:wclist.c      ****         base = base + i;
  91              		.loc 1 31 21 discriminator 3
  92 00b9 8B45FC   		mov	eax, DWORD PTR -4[rbp]
  93 00bc 4898     		cdqe
  94 00be 48C1E005 		sal	rax, 5
  95              		.loc 1 31 14 discriminator 3
  96 00c2 480145E8 		add	QWORD PTR -24[rbp], rax
  32:wclist.c      ****         base->valid=3, base->taskid=5, base->state=8, base->dptr=datap, base->token='p';
  97              		.loc 1 32 20 discriminator 3
  98 00c6 488B45E8 		mov	rax, QWORD PTR -24[rbp]
  99 00ca C7000300 		mov	DWORD PTR [rax], 3
  99      0000
 100              		.loc 1 32 36 discriminator 3
 101 00d0 488B45E8 		mov	rax, QWORD PTR -24[rbp]
 102 00d4 C7400405 		mov	DWORD PTR 4[rax], 5
 102      000000
 103              		.loc 1 32 51 discriminator 3
 104 00db 488B45E8 		mov	rax, QWORD PTR -24[rbp]
 105 00df C7400808 		mov	DWORD PTR 8[rax], 8
 105      000000
 106              		.loc 1 32 65 discriminator 3
 107 00e6 488B45E8 		mov	rax, QWORD PTR -24[rbp]
 108 00ea 488B55E0 		mov	rdx, QWORD PTR -32[rbp]
 109 00ee 48895010 		mov	QWORD PTR 16[rax], rdx
 110              		.loc 1 32 84 discriminator 3
 111 00f2 488B45E8 		mov	rax, QWORD PTR -24[rbp]
 112 00f6 C6401870 		mov	BYTE PTR 24[rax], 112
  33:wclist.c      ****         base->dummy='D',base->recordid=i + 1;
 113              		.loc 1 33 20 discriminator 3
 114 00fa 488B45E8 		mov	rax, QWORD PTR -24[rbp]
 115 00fe C6401944 		mov	BYTE PTR 25[rax], 68
 116              		.loc 1 33 42 discriminator 3
 117 0102 8B45FC   		mov	eax, DWORD PTR -4[rbp]
 118 0105 83C001   		add	eax, 1
 119 0108 89C2     		mov	edx, eax
 120              		.loc 1 33 39 discriminator 3
 121 010a 488B45E8 		mov	rax, QWORD PTR -24[rbp]
 122 010e 6689501A 		mov	WORD PTR 26[rax], dx
  34:wclist.c      ****         base = base - i;
 123              		.loc 1 34 21 discriminator 3
 124 0112 8B45FC   		mov	eax, DWORD PTR -4[rbp]
 125 0115 4898     		cdqe
 126 0117 48C1E005 		sal	rax, 5
 127 011b 48F7D8   		neg	rax
 128              		.loc 1 34 14 discriminator 3
 129 011e 480145E8 		add	QWORD PTR -24[rbp], rax
  30:wclist.c      ****         base = base + i;
 130              		.loc 1 30 38 discriminator 3
 131 0122 8345FC01 		add	DWORD PTR -4[rbp], 1
 132              	.L5:
  30:wclist.c      ****         base = base + i;
 133              		.loc 1 30 5 discriminator 1
 134 0126 837DFC09 		cmp	DWORD PTR -4[rbp], 9
 135 012a 7E8D     		jle	.L6
 136              	.LBE2:
  35:wclist.c      ****     }
  36:wclist.c      ****     return; 
 137              		.loc 1 36 5
 138 012c 90       		nop
  37:wclist.c      **** }
 139              		.loc 1 37 1
 140 012d 5D       		pop	rbp
 141              		.cfi_def_cfa 7, 8
 142 012e C3       		ret
 143              		.cfi_endproc
 144              	.LFE7:
 146              		.section	.rodata
 147              	.LC1:
 148 0007 5265636F 		.string	"Record: %d\n"
 148      72643A20 
 148      25640A00 
 149 0013 00000000 		.align 8
 149      00
 150              	.LC2:
 151 0018 76616C69 		.string	"valid: %d\ntaskid: %d\nstate: %d\ndptr: %p\n"
 151      643A2025 
 151      640A7461 
 151      736B6964 
 151      3A202564 
 152 0041 00000000 		.align 8
 152      000000
 153              	.LC3:
 154 0048 746F6B65 		.string	"token: %c\ndummy: %c\nrecordid: %hd\n\n"
 154      6E3A2025 
 154      630A6475 
 154      6D6D793A 
 154      2025630A 
 155              		.text
 156              		.globl	printList
 158              	printList:
 159              	.LFB8:
  38:wclist.c      **** void printList(struct CListRecord *base)
  39:wclist.c      **** {
 160              		.loc 1 39 1
 161              		.cfi_startproc
 162 012f F30F1EFA 		endbr64
 163 0133 55       		push	rbp
 164              		.cfi_def_cfa_offset 16
 165              		.cfi_offset 6, -16
 166 0134 4889E5   		mov	rbp, rsp
 167              		.cfi_def_cfa_register 6
 168 0137 4883EC20 		sub	rsp, 32
 169 013b 48897DE8 		mov	QWORD PTR -24[rbp], rdi
 170              	.LBB3:
  40:wclist.c      ****     for (int i = 0; i < MAX_RECORDS; ++i){
 171              		.loc 1 40 14
 172 013f C745F400 		mov	DWORD PTR -12[rbp], 0
 172      000000
 173              		.loc 1 40 5
 174 0146 E9C40000 		jmp	.L9
 174      00
 175              	.L10:
 176              	.LBB4:
  41:wclist.c      **** 
  42:wclist.c      ****         base = base + i;
 177              		.loc 1 42 21 discriminator 3
 178 014b 8B45F4   		mov	eax, DWORD PTR -12[rbp]
 179 014e 4898     		cdqe
 180 0150 48C1E005 		sal	rax, 5
 181              		.loc 1 42 14 discriminator 3
 182 0154 480145E8 		add	QWORD PTR -24[rbp], rax
  43:wclist.c      ****         char *dnump = base->dptr;
 183              		.loc 1 43 15 discriminator 3
 184 0158 488B45E8 		mov	rax, QWORD PTR -24[rbp]
 185 015c 488B4010 		mov	rax, QWORD PTR 16[rax]
 186 0160 488945F8 		mov	QWORD PTR -8[rbp], rax
  44:wclist.c      ****         char dnum = *dnump + i;
 187              		.loc 1 44 21 discriminator 3
 188 0164 488B45F8 		mov	rax, QWORD PTR -8[rbp]
 189 0168 0FB600   		movzx	eax, BYTE PTR [rax]
 190 016b 89C2     		mov	edx, eax
 191              		.loc 1 44 28 discriminator 3
 192 016d 8B45F4   		mov	eax, DWORD PTR -12[rbp]
 193 0170 01D0     		add	eax, edx
 194              		.loc 1 44 14 discriminator 3
 195 0172 8845F3   		mov	BYTE PTR -13[rbp], al
  45:wclist.c      ****         printf("Record: %d\n",dnum);
 196              		.loc 1 45 9 discriminator 3
 197 0175 0FBE45F3 		movsx	eax, BYTE PTR -13[rbp]
 198 0179 89C6     		mov	esi, eax
 199 017b 488D3D00 		lea	rdi, .LC1[rip]
 199      000000
 200 0182 B8000000 		mov	eax, 0
 200      00
 201 0187 E8000000 		call	printf@PLT
 201      00
  46:wclist.c      ****         printf("valid: %d\ntaskid: %d\nstate: %d\ndptr: %p\n",base->valid,base->taskid,base->state,
 202              		.loc 1 46 104 discriminator 3
 203 018c 488B45E8 		mov	rax, QWORD PTR -24[rbp]
 204 0190 488B5010 		mov	rdx, QWORD PTR 16[rax]
 205              		.loc 1 46 9 discriminator 3
 206 0194 8B45F4   		mov	eax, DWORD PTR -12[rbp]
 207 0197 4898     		cdqe
 208 0199 488D3402 		lea	rsi, [rdx+rax]
 209 019d 488B45E8 		mov	rax, QWORD PTR -24[rbp]
 210 01a1 8B4808   		mov	ecx, DWORD PTR 8[rax]
 211 01a4 488B45E8 		mov	rax, QWORD PTR -24[rbp]
 212 01a8 8B5004   		mov	edx, DWORD PTR 4[rax]
 213 01ab 488B45E8 		mov	rax, QWORD PTR -24[rbp]
 214 01af 8B00     		mov	eax, DWORD PTR [rax]
 215 01b1 4989F0   		mov	r8, rsi
 216 01b4 89C6     		mov	esi, eax
 217 01b6 488D3D00 		lea	rdi, .LC2[rip]
 217      000000
 218 01bd B8000000 		mov	eax, 0
 218      00
 219 01c2 E8000000 		call	printf@PLT
 219      00
  47:wclist.c      ****         printf("token: %c\ndummy: %c\nrecordid: %hd\n\n",base->token,base->dummy,base->recordid);
 220              		.loc 1 47 86 discriminator 3
 221 01c7 488B45E8 		mov	rax, QWORD PTR -24[rbp]
 222 01cb 0FB7401A 		movzx	eax, WORD PTR 26[rax]
 223              		.loc 1 47 9 discriminator 3
 224 01cf 0FBFC8   		movsx	ecx, ax
 225              		.loc 1 47 74 discriminator 3
 226 01d2 488B45E8 		mov	rax, QWORD PTR -24[rbp]
 227 01d6 0FB64019 		movzx	eax, BYTE PTR 25[rax]
 228              		.loc 1 47 9 discriminator 3
 229 01da 0FBED0   		movsx	edx, al
 230              		.loc 1 47 62 discriminator 3
 231 01dd 488B45E8 		mov	rax, QWORD PTR -24[rbp]
 232 01e1 0FB64018 		movzx	eax, BYTE PTR 24[rax]
 233              		.loc 1 47 9 discriminator 3
 234 01e5 0FBEC0   		movsx	eax, al
 235 01e8 89C6     		mov	esi, eax
 236 01ea 488D3D00 		lea	rdi, .LC3[rip]
 236      000000
 237 01f1 B8000000 		mov	eax, 0
 237      00
 238 01f6 E8000000 		call	printf@PLT
 238      00
  48:wclist.c      ****         base = base - i;
 239              		.loc 1 48 21 discriminator 3
 240 01fb 8B45F4   		mov	eax, DWORD PTR -12[rbp]
 241 01fe 4898     		cdqe
 242 0200 48C1E005 		sal	rax, 5
 243 0204 48F7D8   		neg	rax
 244              		.loc 1 48 14 discriminator 3
 245 0207 480145E8 		add	QWORD PTR -24[rbp], rax
 246              	.LBE4:
  40:wclist.c      **** 
 247              		.loc 1 40 38 discriminator 3
 248 020b 8345F401 		add	DWORD PTR -12[rbp], 1
 249              	.L9:
  40:wclist.c      **** 
 250              		.loc 1 40 5 discriminator 1
 251 020f 837DF409 		cmp	DWORD PTR -12[rbp], 9
 252 0213 0F8E32FF 		jle	.L10
 252      FFFF
 253              	.LBE3:
  49:wclist.c      ****     }
  50:wclist.c      ****     return;
 254              		.loc 1 50 5
 255 0219 90       		nop
  51:wclist.c      **** }
 256              		.loc 1 51 1
 257 021a C9       		leave
 258              		.cfi_def_cfa 7, 8
 259 021b C3       		ret
 260              		.cfi_endproc
 261              	.LFE8:
 263              	.Letext0:
 264              		.file 2 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h"
 265              		.file 3 "/usr/include/x86_64-linux-gnu/bits/types.h"
 266              		.file 4 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h"
 267              		.file 5 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h"
 268              		.file 6 "/usr/include/stdio.h"
 269              		.file 7 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 270              		.file 8 "/usr/include/math.h"
 271              		.file 9 "wclist.h"
 1415              		.section	.note.gnu.property,"a"
 1416              		.align 8
 1417 0000 04000000 		.long	 1f - 0f
 1418 0004 10000000 		.long	 4f - 1f
 1419 0008 05000000 		.long	 5
 1420              	0:
 1421 000c 474E5500 		.string	 "GNU"
 1422              	1:
 1423              		.align 8
 1424 0010 020000C0 		.long	 0xc0000002
 1425 0014 04000000 		.long	 3f - 2f
 1426              	2:
 1427 0018 03000000 		.long	 0x3
 1428              	3:
 1429 001c 00000000 		.align 8
 1430              	4:
